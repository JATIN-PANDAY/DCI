# Generated by Django 5.0 on 2023-12-29 06:02

import django.core.validators
import myapp.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="About_us",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("content", models.TextField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Courses",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "course_name",
                    models.CharField(blank=True, max_length=400, null=True),
                ),
                (
                    "course_duration",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("course_detail", models.TextField(blank=True, null=True)),
                ("course_fee", models.IntegerField()),
                ("course_image", models.ImageField(upload_to="courses")),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GalleryItem",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True, null=True)),
                (
                    "file",
                    models.FileField(blank=True, null=True, upload_to="gallery_files/"),
                ),
                ("video_link", models.URLField(blank=True, null=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Student_Zone",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("name", models.CharField(max_length=50, null=True)),
                ("enroll_no", models.CharField(max_length=22, unique=True)),
                ("father_name", models.CharField(blank=True, max_length=50, null=True)),
                ("mother_name", models.CharField(blank=True, max_length=50, null=True)),
                ("address", models.TextField(blank=True, null=True)),
                (
                    "pin",
                    models.CharField(
                        blank=True,
                        max_length=6,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid 6-digit PIN.", regex="^\\d{6}$"
                            )
                        ],
                    ),
                ),
                ("sex", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "religion_category",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("dob", models.DateField(blank=True, null=True)),
                (
                    "qualification",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "marksheet_last_year",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="student/last_year_results/",
                        validators=[myapp.models.validate_pdf],
                    ),
                ),
                (
                    "mobile_number",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid 10-digit mobile number.",
                                regex="^\\d{10}$",
                            )
                        ],
                    ),
                ),
                (
                    "whatsapp_number",
                    models.CharField(
                        blank=True,
                        max_length=10,
                        null=True,
                        validators=[
                            django.core.validators.RegexValidator(
                                message="Enter a valid 10-digit WhatsApp number.",
                                regex="^\\d{10}$",
                            )
                        ],
                    ),
                ),
                (
                    "marital_status",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                (
                    "signature",
                    models.FileField(
                        blank=True, null=True, upload_to="student/signatures/"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True, null=True, upload_to="student/images/"
                    ),
                ),
                (
                    "thumb_fingerprint",
                    models.ImageField(
                        blank=True, null=True, upload_to="student/thumbprints/"
                    ),
                ),
                (
                    "student_result",
                    models.FileField(
                        blank=True,
                        null=True,
                        upload_to="student_results/",
                        validators=[myapp.models.validate_pdf],
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Testimonials",
            fields=[
                (
                    "uid",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now=True, null=True)),
                ("updated_at", models.DateTimeField(auto_now_add=True, null=True)),
                ("message", models.TextField(blank=True, null=True)),
                ("image", models.ImageField(upload_to="testmomorials/image")),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
